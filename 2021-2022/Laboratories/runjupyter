#!/bin/sh
#
# Copyright (c) 2022 Domagoj Stolfa
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

JUPYTER_PORT="8080"

warn() {
	echo "${@}" >&2
}

die() {
	warn "${@}"
	exit 1
}

usage() {
	die "usage: $(basename "${0}") [-f]"
}

main() {
	# shellcheck disable=SC3043
	local _flag _force _running

	_force=0

	while getopts "f" _flag; do
		case "${_flag}" in
		f)
			_force=1
			;;
		*)
			usage
			;;
		esac
	done
	shift $((OPTIND - 1))

	# Check if there is any Jupyter Notebook or IPython kernel process
	# running.
	if _running="$(pgrep -lf "jupyter-lab|ipykernel_launcher")"; then
		warn "Jupyter is already running with the following processes:"
		warn "${_running}"
		if [ "${_force}" = 0 ]; then
			die "Terminate the above processes and try again."
		else
			warn "The force flag was specified. Running anyway."
		fi
	fi

	# Run the Jupyter Notebook and don't try to find a random port instead
	# of the specified one.
	#
	# In practice, this works as if we used a lock, e.g. with flock(2) or
	# pidfile_open(3), to make sure there's only one Jupyter Notebook
	# process running.
	jupyter-lab --port="${JUPYTER_PORT}" --allow-root --no-browser \
	    --port-retries=0
}

main "${@}"
