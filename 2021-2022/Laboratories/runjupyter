#
# Copyright (c) 2022 Domagoj Stolfa
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#


#!/bin/sh

usage() {
	cat >&2 <<__EOF__
usage: $(basename $0) [-f]
__EOF__
	exit 1
}

force_run=0

while getopts f o; do
	case $o in
	f)
		force_run=1
		;;
	?)
		usage
		;;
	esac
	shift $((OPTIND-1))
done

# Hack to see if python is already running somewhere.
running=$(ps auxw | grep "[p]ython")

if [ ! -z "${running}" ]; then
	# Pretty print the error. This is messy but does the job.
	cat >&2 <<__EOF__
Jupyter is already running. Please turn off the following processes manually:

__EOF__
	echo "${running}" | awk '{ print "\t"$2 > "/dev/stderr" }'
	>&2 echo ""
	if [ ${force_run} = 0 ]; then
		exit 1
	else
		echo "-f is specified. Running anyway!"
	fi
fi

# We don't currently use 'lockf', and instead specify --port-retries=0.
jupyter-lab --port=8080 --allow-root --no-browser --port-retries=0
